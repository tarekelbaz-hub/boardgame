# ansible-playbook -i inventory.yml playbooks/k8s_setup.yml
# https://hbayraktar.medium.com/how-to-install-kubernetes-cluster-on-ubuntu-22-04-step-by-step-guide-7dbf7e8f5f99

---
- hosts: all
  #vars:
    #ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
  user: devops-user
  gather_facts: yes
  tasks:

    #- include_tasks: ../tasks/init.yml

    - set_fact: ansible_user=devops-user  # switch to dev user.

    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist
      become: true

    - name: Turn off swap
      command: swapoff -a
      become: true

    - name: Comment out swap entries in /etc/fstab
      lineinfile:
        path: /etc/fstab
        regexp: '\sswap\s'
        line: '#\g<0>'
        backrefs: yes
      become: true

    - name: Add overlay and br_netfilter to /etc/modules-load.d/containerd.conf
      ansible.builtin.blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter
        create: yes
      become: true

    - name: Load overlay kernel module
      command: modprobe overlay
      become: true

    - name: Load br_netfilter kernel module
      command: modprobe br_netfilter
      become: true

    - name: Configure sysctl settings for Kubernetes in /etc/sysctl.d/kubernetes.conf
      ansible.builtin.blockinfile:
        path: /etc/sysctl.d/kubernetes.conf
        block: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
        create: yes
      become: true

    - name: Apply sysctl settings from all configuration files
      command: sysctl --system
      become: true

    - include_tasks: setup_containerd.yml

    - name: Add Kubernetes APT repository
      copy:
        content: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /'
        dest: /etc/apt/sources.list.d/kubernetes.list
        owner: root
        group: root
        mode: '0644'
      become: true

    - name: Download Kubernetes Release key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
        dest: /tmp/kubernetes-release.key
        mode: '0644'
      become: true

    - name: De-armour Kubernetes Release key
      command: gpg --dearmor --yes -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-release.key
      become: true

    - name: Update APT package index
      apt:
        update_cache: yes
      become: true

    - name: Install Kubernetes packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
      become: true

    - name: Hold Kubernetes packages
      command: apt-mark hold kubelet kubeadm kubectl
      become: true

# Task for initializing master node
- hosts: masters
  user: devops-user
  become: true
  tasks:
    
    - name: Run kubeadm init
      command: kubeadm init
      register: kubeadm_init_result
      ignore_errors: true  # Ignore errors to proceed to the next step
      become: true

    - name: Check if kubeadm init was successful
      when: kubeadm_init_result.rc != 0  # Only run this if kubeadm init failed
      block:
        - name: Reset Kubernetes cluster
          command: kubeadm reset --force
          register: kubeadm_reset
          changed_when: kubeadm_reset.stdout != ""
          become: true

        - name: Show kubeadm reset output
          debug:
            var: kubeadm_reset.stdout
          become: true

        - name: Initialize the Kubernetes cluster again
          command: kubeadm init
          register: kubeadm_init_result_again
          become: true

    - name: Show kubeadm init output (initial or re-init)
      debug:
        var: kubeadm_init_result.stdout
      when: kubeadm_init_result.rc == 0  # Show the output only if init was successful
      become: true

    - name: Show kubeadm init output (on second attempt)
      debug:
        var: kubeadm_init_result_again.stdout
      when: kubeadm_init_result_again is defined  # Check if the second init attempt was made
      become: true

    - name: Create .kube directory
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: '0755'
      become: yes

    - name: Copy admin.conf to .kube/config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"
        mode: '0644'
        remote_src: yes
      become: yes

    - name: Change ownership of .kube/config
      file:
        path: "{{ ansible_env.HOME }}/.kube/config"
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"
      become: yes

    - name: Deploy Network Plugin
      command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml
      become: true

    - name: Deploy NGINX Ingress Controller
      command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.49.0/deploy/static/provider/baremetal/deploy.yaml
      become: true

    - name: Download kubeaudit tarball
      get_url:
        url: https://github.com/Shopify/kubeaudit/releases/download/v0.22.2/kubeaudit_0.22.2_linux_amd64.tar.gz
        dest: /tmp/kubeaudit.tar.gz
        mode: '0644'
      become: true

    - name: Extract kubeaudit binary
      unarchive:
        src: /tmp/kubeaudit.tar.gz
        dest: /tmp/
        remote_src: yes  # Indicate that the source file is already on the remote host
      become: true

    - name: Move kubeaudit binary to /usr/local/bin
      command: mv /tmp/kubeaudit /usr/local/bin/kubeaudit
      become: true
      
    - name: Get the join command for worker nodes
      tags: test  
      command: kubeadm token create --print-join-command
      register: join_command
      become: true

    - name: Set join command fact
      set_fact:
        join_command: "{{ join_command.stdout }}"
      become: true

# Task for joining worker nodes
- hosts: workers
  user: devops-user
  become: true
  tasks:

    - name: Join worker node to the cluster
      command: "{{ hostvars[groups['masters'][0]].join_command }}"
      become: true
